services:
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-uxdb}
      POSTGRES_USER: ${POSTGRES_USER:-uxuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-uxpass}
    volumes:
      - ./backend/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backend/postgres/data:/var/lib/postgresql/data

  springboot-gateway:
    build: ./backend/springboot/ux_beta
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - APP_CORS_ALLOWED_ORIGINS=${FRONTEND_ORIGIN:-http://localhost:4200}
      - APP_LLM_BASE_URL=${LLM_API_URL:-http://fastapi-llm:5000}
      - APP_VISION_BASE_URL=${VISION_API_URL:-http://fastapi-vision:5001}
    depends_on:
      - fastapi-llm
      - fastapi-vision
      - postgres

  fastapi-llm:
    build: ./backend/fastapi_llm
    ports:
      - "5000:5000"
    environment:
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OLLAMA_ENDPOINT=${OLLAMA_ENDPOINT:-http://ollama:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}

  fastapi-vision:
    build: ./backend/fastapi_vision
    ports:
      - "5001:5001"
    environment:
      - VISION_MODEL_PATH=/app/models

  frontend:
    build: ./frontend
    ports:
      - "4200:4200"
    environment:
      - API_BASE_URL=http://springboot-gateway:8080/api
